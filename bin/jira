#!/usr/bin/env bash

set -Eeuo pipefail
# shellcheck disable=SC2059
log() { local F="$1"; shift; printf "$F\n" "$@" 1>&2; }
die() { local F="FATAL: $1"; shift; log "$F" "$@"; exit 1; }
err() { local F="ERROR: $1"; shift; log	"$F" "$@"; return 1; }
# Set exit trap if this file was directly invoked rather than sourced.
# https://stackoverflow.com/questions/2683279/how-to-detect-if-a-script-is-being-sourced
(return 0 2>/dev/null) || trap 'heimdall-push.main "$@"' EXIT
heimdall-push.main() {
	local CODE=$?; trap - EXIT
	[[ $CODE == 0 ]] || die "Script exited with code $CODE before main func could run."
	[[ ${#@} != 0 ]] || { log "No arguments passed."; exit; }; local FUNC="$1"; shift
	declare -F | cut -d' ' -f3 | grep -qE "^$FUNC\$" || die "Function '%s' not defined." "$FUNC"
	"$FUNC" "$@"
}

HOST="hashicorp.atlassian.net"

# Your functions go here...
SEARCH_URL="https://$HOST/rest/api/3/search"

search() { local JQL="$1"
	http -A basic -a "$JIRA_USER:$JIRA_TOKEN" "$SEARCH_URL" jql="$JQL"
}

search_my_issues() { local where="$1"
	search "$where AND assignee in (currentUser()) ORDER BY rank"
}

get_mysub_tasks_of() { local issue="$1"
	search_my_issues "parent = $issue"
}

